type: object
properties:
  storageClass:
    type: string
    x-examples: [ "ceph-ssd", "false" ]
    description: |-
      The name of StorageClass that will be used in the cluster by default.

      If the value is not specified, the StorageClass will be used according to the [global storageClass parameter](../../deckhouse-configure-global.html#parameters-storageclass) setting.

      The global `storageClass` parameter is only considered when the module is enabled. Changing the global `storageClass` parameter while the module is enabled will not trigger disk re-provisioning.

      **Warning.** Specifying a value different from the one currently used (in the existing PVC) will result in disk re-provisioning and all data will be deleted.

      If `false` is specified, `emptyDir` will be forced to be used.
  insecureDbRegistry:
    type: boolean
    default: false
    description: |
      Allows Trivy to download vulnerability databases using insecure HTTPS connections (not passed TLS certificate verification) or HTTP connections.
    x-doc-default: false
    x-examples: [true, false]
  additionalVulnerabilityReportFields:
    type: array
    description: |
      A list of additional fields from the vulnerability database to add to the VulnerabilityReport.
    items:
      type: string
    x-examples:
    -
      - Class
      - Target
  severities:
    type: array
    description: |
      Filter vulnerability reports by their severities.

    items:
      type: string
      enum:
        - UNKNOWN
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
    x-examples:
    -
      - UNKNOWN
      - CRITICAl
  linkCVEtoBDU:
    type: boolean
    default: false
    description: |
      Convert vulnerability reports. Convert CVE database vulnerabilities to BDU database records.

    x-doc-default: false
    x-examples: [true, false]
  tolerations:
    type: array
    description: |
      Optional `tolerations` for `operator-trivy` and scan jobs.

      The same as `spec.tolerations` for the Kubernetes pod.

      If the parameter is omitted or `false`, it will be determined [automatically](https://deckhouse.io/products/kubernetes-platform/documentation/v1/#advanced-scheduling).
    items:
      type: object
      properties:
        effect:
          type: string
        key:
          type: string
        operator:
          type: string
        tolerationSeconds:
          type: integer
          format: int64
        value:
          type: string
    x-examples:
    -
      - key: "key1"
        operator: "Equal"
        value: "value1"
        effect: "NoSchedule"
  nodeSelector:
    type: object
    additionalProperties:
      type: string
    x-kubernetes-preserve-unknown-fields: true
    x-examples:
      - disktype: ssd
    description: |
      Optional `nodeSelector` for `operator-trivy` and scan jobs.

      The same as `spec.nodeSelector` for the Kubernetes pod.

      If the parameter is omitted or `false`, it will be determined [automatically](https://deckhouse.io/products/kubernetes-platform/documentation/v1/#advanced-scheduling).
  reportResourceLabels:
    type: array
    description: |
      A list of additional labels for marking Trivi's reports (VulnerabilityReport).

      The values of these labels will correspond to the values of the scanned resources' labels.
    items:
      type: string
    x-examples:
    -
      - app
      - env

  insecureRegistries:
    type: array
    description: |
      List of container registry addresses to which insecure HTTPS connections (not passed TLS certificate verification) or HTTP connections are allowed.
    x-examples:
    -
      - my.registry.com
      - http-only.registry.io
    items:
      type: string
  registriesCA:
    type: string
    description: |
      List of registry CA certificates for connecting to private registries.
      
      If there is more than one certificate, they are specified sequentially without additional line breaks.
    x-examples:
    - | 
        -----BEGIN CERTIFICATE-----
        MIIDfDCCAmSgAwIBAgIUPSUV/R5CLPXseGlF7YVCr9gt4LAwDQYJKoZIhvcNAQEL
        BQAwWDELMAkGA1UEBhMCVVMxDjAMBgNVBAgMBVN0YXRlMQ0wCwYDVQQHDARUb3du
        MRUwEwYDVQQKDAxPcmdhbml6YXRpb24xEzARBgNVBAMMCm5leHVzLXRlc3QwHhcN
        MjQxMTIxMDc1MjE2WhcNMjUxMTIxMDc1MjE2WjBYMQswCQYDVQQGEwJVUzEOMAwG
        KoZIhvcNAQELBQADggEBAClOsateVJj11YvRCDrfYZvPpMWDdZHiPxV9yQgkq7uP
        63Bzp+6zB1IM16cbgitrkCQEBJhvluRbHn4a6utrnA3dWMHH2+qzYRySQi2FOdPN
        Yl8pxqA9hnXFFAXPfI8Rk3UQLjTYhWsV5Xeis442dUopJJPExN9PNvJ6mrQX29e8
        GAN3OmUiK928Mkgdf+qooUsiPexNnRStJ2SulK/dLdQc4r8aZ8HP4JWl6vCSeDI0
        M6inHZJ77Q+xWy997+07q0wswjZ7f9SWkGMTVvDq8dp7HRTMvBtregBpRQecDvuj
        35CMgeCZPoBbgknXszKw7O0aTWgr7+ehBI+Q8sAXMJY=
        -----END CERTIFICATE-----
        -----BEGIN CERTIFICATE-----
        MIIDfDCCAmSgAwIBAgIUU6lD+uD4N9aOL4soKXNwY6OUj60wDQYJKoZIhvcNAQEL
        BQAwWDELMAkGA1UEBhMCVVMxDjAMBgNVBAgMBVN0YXRlMQ0wCwYDVQQHDARUb3du
        MRUwEwYDVQQKDAxPcmdhbml6YXRpb24xEzARBgNVBAMMCm5leHVzLXRlc3QwHhcN
        MjQxMTIxMTEzNjI1WhcNMjUxMTIxMTEzNjI1WjBYMQswCQYDVQQGEwJVUzEOMAwG
        A1UECAwFU3RhdGUxDTALBgNVBAcMBFRvd24xFTATBgNVBAoMDE9yZ2FuaXphdGlv
        ntCzLpMZ7zuKn7SMxmebphUQVuHKIC0CAwEAAaM+MDwwGwYDVR0RBBQwEocECoAA
        /ogiONhTGS/AchSvv40dtbXJG44xT2HBY2kGm/0euWa83ZYLqKHIEyvV52npeXSq
        tktThvl8peBkd/LS3PF/TPTxsplM1yaNvT0B5RrUSQ6IlKoshxY+xFktDboF/RIY
        eG8dt39/n7BduItv2hNaNwgU9GEUIQ6VQV+pbQFsvGcu9+1NxnJbUi/vXKSJEOkk
        AIyO7AA1TFlJ/m5Pd8SQYhz5WfCSIwFfp/H2rY73cyNUlAgY0oCxrwxjxzFIpdCF
        67hTqj/DMwFWC8qPS3iiGr1TO9phnjPUBV6ch5qed4I=
        -----END CERTIFICATE-----