##### For specific env
{{- if (eq $.Values.systemRegistry.environment "Vadim")  }}
#####

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: d8-system-registry-manager
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "d8-system-registry-manager")) | nindent 2 }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: d8:system-registry-manager
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "d8-system-registry-manager")) | nindent 2 }}
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: d8:system-registry-manager
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "d8-system-registry-manager")) | nindent 2 }}
subjects:
- kind: ServiceAccount
  name: d8-system-registry-manager
  namespace: d8-{{ $.Chart.Name }}
roleRef:
  kind: Role
  name: d8:system-registry-manager
  apiGroup: rbac.authorization.k8s.io

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: d8:system-registry-manager
  {{- include "helm_lib_module_labels" (list . (dict "app" "d8-system-registry-manager")) | nindent 2 }}
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: d8:system-registry-manager
  {{- include "helm_lib_module_labels" (list . (dict "app" "d8-system-registry-manager")) | nindent 2 }}
subjects:
  - kind: ServiceAccount
    name: d8-system-registry-manager
    namespace: d8-{{ $.Chart.Name }}
roleRef:
  kind: ClusterRole
  name: d8:system-registry-manager
  apiGroup: rbac.authorization.k8s.io

##### For specific env
{{- end }}
#####