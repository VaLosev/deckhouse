apiVersion: apps/v1
kind: Deployment
metadata:
  name: distribution
  namespace: d8-system-registry
  {{- include "helm_lib_module_labels" (list . (dict "app" "distribution")) | nindent 2 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: distribution
  template:
    metadata:
      labels:
        app: distribution
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
      # {{- include "helm_lib_priority_class" (tuple . "cluster-low") | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      # {{- include "helm_lib_tolerations" (tuple . "any-node") | nindent 6 }}
      containers:
        - name: distribution
          image: {{ include "helm_lib_module_image" (list . "dockerDistribution") }}
          args:
            - serve
            - /etc/docker/registry/config.yaml
          env:
            - name: REGISTRY_AUTH_TOKEN_AUTOREDIRECT
              value: "false"
            - name: REGISTRY_AUTH_TOKEN_ISSUER
              value: Registry test server
            - name: REGISTRY_AUTH_TOKEN_REALM
              value: http://auth:5001/auth
            # - name: REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE
            #   value: /certs/auth-1/server.crt
            - name: REGISTRY_AUTH_TOKEN_SERVICE
              value: Docker registry
            - name: REGISTRY_HEALTH_STORAGEDRIVER_ENABLED
              value: "false"
            - name: REGISTRY_HEALTH_STORAGEDRIVER_INTERVAL
              value: 10s
            - name: REGISTRY_HEALTH_STORAGEDRIVER_THRESHOLD
              value: "3"
            - name: REGISTRY_HTTP_ADDR
              value: 0.0.0.0:5000
            - name: REGISTRY_HTTP_DEBUG_ADDR
              value: 0.0.0.0:5001
            - name: REGISTRY_HTTP_DEBUG_PROMETHEUS_ENABLED
              value: "true"
            - name: REGISTRY_HTTP_DEBUG_PROMETHEUS_PATH
              value: /metrics
            - name: REGISTRY_HTTP_PREFIX
              value: /
            - name: REGISTRY_HTTP_SECRET
              value: testsecret
            # - name: REGISTRY_HTTP_TLS_CERTIFICATE
            #   value: /certs/distribution-1/server.pem
            # - name: REGISTRY_HTTP_TLS_KEY
            #   value: /certs/distribution-1/server.key
            - name: REGISTRY_LOG_LEVEL
              value: info
            - name: REGISTRY_STORAGE
              value: s3
            - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR
              value: inmemory
            - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTORSIZE
              value: "100000"
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: "true"
            - name: REGISTRY_STORAGE_REDIRECT_DISABLE
              value: "true"
            - name: REGISTRY_STORAGE_S3_ACCESSKEY
              value: awsaccesskey
            - name: REGISTRY_STORAGE_S3_BUCKET
              value: registry
            - name: REGISTRY_STORAGE_S3_CHUNKSIZE
              value: "5242880"
            - name: REGISTRY_STORAGE_S3_ENCRYPT
              value: "false"
            - name: REGISTRY_STORAGE_S3_LOGLEVEL
              value: info
            - name: REGISTRY_STORAGE_S3_MULTIPARTCOPYCHUNKSIZE
              value: "33554432"
            - name: REGISTRY_STORAGE_S3_MULTIPARTCOPYMAXCONCURRENCY
              value: "100"
            - name: REGISTRY_STORAGE_S3_MULTIPARTCOPYTHRESHOLDSIZE
              value: "33554432"
            - name: REGISTRY_STORAGE_S3_REGION
              value: us-west-1
            - name: REGISTRY_STORAGE_S3_REGIONENDPOINT
              value: http://seaweedfs:8333
            - name: REGISTRY_STORAGE_S3_ROOTDIRECTORY
              value: /
            - name: REGISTRY_STORAGE_S3_SECRETKEY
              value: awssecret
            - name: REGISTRY_STORAGE_S3_SECURE
              value: "true"
            - name: REGISTRY_STORAGE_S3_USEDUALSTACK
              value: "false"
            - name: REGISTRY_STORAGE_S3_V4AUTH
              value: "true"
          ports:
            - name: "http-addr"
              containerPort: 5000
            - name: "http-debug-addr"
              containerPort: 5001
          volumeMounts:
            - name: config-files
              mountPath: /etc/docker/registry/config.yaml
              subPath: config.yaml
              readOnly: true
      volumes:
        - name: config-files
          configMap:
            name: distribution-config-files
