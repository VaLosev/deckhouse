{{- define "system_registry_manager_resources" }}
cpu: 25m
memory: 40Mi
{{- end }}

{{- define "image_holder_resources" }}
cpu: 10m
memory: 10Mi
{{- end }}

{{- $images := dict }}
{{- $_ := set $images "dockerAuth" $.Values.global.modulesImages.digests.systemRegistry.dockerAuth }}
{{- $_ := set $images "dockerDistribution" $.Values.global.modulesImages.digests.systemRegistry.dockerDistribution }}
{{- $_ := set $images "seaweedfs" $.Values.global.modulesImages.digests.systemRegistry.seaweedfs }}


{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: d8-system-registry-manager
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "d8-system-registry-manager" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: d8-system-registry-manager
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: system-registry-manager
      minAllowed:
        {{- include "system_registry_manager_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 50m
        memory: 80Mi
    {{- range $name, $imageDigest := $images }}
    - containerName: image-holder-{{ $name | kebabcase }}
      minAllowed:
        {{- include "image_holder_resources" $ | nindent 8 }}
      maxAllowed:
        cpu: 10m
        memory: 10Mi
    {{- end }}
{{- end }}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: d8-system-registry-manager
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "d8-system-registry-manager")) | nindent 2 }}
spec:
  selector:
    matchLabels:
      app: d8-system-registry-manager
  template:
    metadata:
      labels:
        app: d8-system-registry-manager
      annotations:
        # checksum/config: 
        # checksum/pki: 
        # rollout-epoch: 
    spec:
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node" "uninitialized") | nindent 6 }}
      imagePullSecrets:
      - name: deckhouse-registry
      serviceAccountName: d8-system-registry-manager
      containers:
      - name: system-registry-manager
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem_capabilities_drop_all_and_add" (list . (list "SYS_CHROOT")) | nindent 8 }}
        image: {{ include "helm_lib_module_image" (list . "systemRegistryManager") }}
        args:
          - start
        volumeMounts:
        - mountPath: /static-pod-files
          name: static-pod-files
          readOnly: true
        # - mountPath: /pki
        #   name: pki
        #   readOnly: true
        # - mountPath: /config
        #   name: config
        #   readOnly: true
        - mountPath: /etc/kubernetes
          name: etc-kubernetes
        - mountPath: /root/.kube/
          name: root-kube
        - mountPath: /tmp
          name: tmp
        env:
        - name: MY_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 8097
        readinessProbe:
          httpGet:
            host: 127.0.0.1
            path: /readyz
            port: 8097
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 8
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 50 | nindent 12 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
            {{- include "system_registry_manager_resources" . | nindent 12 }}
{{- end }}
{{- range $name, $imageDigest := $images }}
      - name: image-holder-{{ $name | kebabcase }}
        image: "{{ $.Values.global.modulesImages.registry.base }}@{{ $imageDigest }}"
        command:
        - /pause
  {{- if not ( $.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
        resources:
          requests:
            {{- include "image_holder_resources" $ | nindent 12 }}
  {{- end }}
{{- end }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      priorityClassName: system-cluster-critical
      volumes:
      # - secret:
      #     secretName: d8-pki
      #   name: pki
      # - secret:
      #     secretName: d8-system-registry-manager-config
      #   name: config
      - name: static-pod-files
        secret:
          secretName: d8-static-pod-files
      - name: etc-kubernetes
        hostPath:
          path: /etc/kubernetes/
          type: DirectoryOrCreate
      - name: root-kube
        hostPath:
          path: /root/.kube/
          type: DirectoryOrCreate
      - name: tmp
        emptyDir: {}
