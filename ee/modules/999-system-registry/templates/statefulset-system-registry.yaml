---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: system-registry
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" $.Chart.Name)) | nindent 2 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $.Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ $.Chart.Name }}
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
      # {{- include "helm_lib_priority_class" (tuple . "cluster-low") | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      # {{- include "helm_lib_tolerations" (tuple . "any-node") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
      containers:

        - name: auth
          {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 10 }}
          image: {{ include "helm_lib_module_image" (list . "dockerAuth") }}
          args:
            - -logtostderr
            - /etc/docker_auth/config.yaml
          ports:
            - name: "auth-server"
              containerPort: 5051
          volumeMounts:
            - name: config-files
              mountPath: /etc/docker_auth/config.yaml
              subPath: auth_config.yaml
              readOnly: true
            - name: host-pki
              mountPath: /etc/kubernetes/pki
              readOnly: true

        - name: seaweedfs
          {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 10 }}
          image: {{ include "helm_lib_module_image" (list . "seaweedfs") }}
          args:
            - "-config_dir=\"/etc/seaweedfs/\""
            - "-logtostderr=true"
            - "-v=0"
            - "server"
            - "-filer"
            - "-s3"
            - "-webdav"
            - "-dir=/seaweedfs_data"
            - "-volume.max=0"
            - "-master.volumeSizeLimitMB=1024"
            - "-metricsPort=9324"
            - "-volume.readMode=local"
            - "-s3.allowDeleteBucketNotEmpty=true"
            - "-master.defaultReplication=002"
            - "-filer.maxMB=16"
            - "-ip=localhost"
            - "-ip.bind=0.0.0.0"
            - "-master.peers=localhost:9333"
          ports:
            - name: "seaweed-master"
              containerPort: 9333
            - name: "seaweed-volume"
              containerPort: 8080
            - name: "seaweed-filer"
              containerPort: 8888
            - name: "seaweed-s3"
              containerPort: 8333
            - name: "seaweed-webdav"
              containerPort: 7333
            - name: "seaweed-metrics"
              containerPort: 9324
          volumeMounts:
            - name: config-files
              mountPath: /etc/seaweedfs/filer.toml
              subPath: seaweedfs_filer.toml
              readOnly: true
            - name: host-pki
              mountPath: /etc/kubernetes/pki
              readOnly: true
            - name: seaweedfs-data
              mountPath: /seaweedfs_data
              readOnly: false

        - name: distribution
          {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 10 }}
          image: {{ include "helm_lib_module_image" (list . "dockerDistribution") }}
          args:
            - serve
            - /etc/docker/registry/config.yaml
          envFrom:
            - configMapRef:
                name: system-registry-distribution-envs
          ports:
            - name: "dd-http-addr"
              containerPort: 5000
            - name: "dd-http-d-addr"
              containerPort: 5001
          volumeMounts:
            - name: config-files
              mountPath: /etc/docker/registry/config.yaml
              subPath: distribution_config.yaml
              readOnly: true
            - name: host-pki
              mountPath: /etc/kubernetes/pki
              readOnly: true

      volumes:
        - name: config-files
          configMap:
            name: system-registry-config-files
        - name: host-pki
          hostPath:
            path: /etc/kubernetes/pki
            type: DirectoryOrCreate
{{- $storageClass := .Values.systemRegistry.internal.effectiveStorageClass }}
{{- if not $storageClass }}
        - name: seaweedfs-data
          emptyDir: {}
{{- else }}
  volumeClaimTemplates:
  - metadata:
      name: seaweedfs-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: {{ $storageClass }}
{{- end }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: system-registry
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" $.Chart.Name)) | nindent 2 }}
spec:
  minAvailable: {{ include "helm_lib_is_ha_to_value" (list . 2 0) }} ## TODO temporary for matrix tests
  selector:
    matchLabels:
      app: {{ $.Chart.Name }}
