{{- if or (not .Values.dashboard.auth.externalAuthentication) (eq (include "helm_lib_module_https_mode" .) "Disabled") }}
  {{- if and (eq (include "helm_lib_module_https_mode" .) "Disabled") (ne .Values.dashboard.accessLevel "User") }}
    {{- cat "On https.mode Disabled the only allowed accessLevel is User" | fail }}
  {{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dashboard
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "auth")) | nindent 2 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: dashboard
  namespace: d8-{{ .Chart.Name }}
  annotations:
    kubernetes.io/service-account.name: "dashboard"
  {{- include "helm_lib_module_labels" (list . (dict "app" "auth")) | nindent 2 }}
type: kubernetes.io/service-account-token
---
apiVersion: deckhouse.io/v1
kind: ClusterAuthorizationRule
metadata:
  name: d8-dashboard
  {{- include "helm_lib_module_labels" (list .) | nindent 2 }}
spec:
  subjects:
  - kind: ServiceAccount
    name: dashboard
    namespace: d8-{{ .Chart.Name }}
  accessLevel: {{ .Values.dashboard.accessLevel }}
  portForwarding: false
  {{- if .Values.dashboard.auth.allowScale }}
  allowScale: true
  {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: basic-auth
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "dashboard")) | nindent 2 }}
type: Opaque
data:
  auth: {{ print "admin:{PLAIN}" .Values.dashboard.internal.auth.password | b64enc | quote }}
{{- end }}
